name: Go Cross-platform Build

permissions:
  contents: write

on:
  push:
    tags:
      - "v*.*"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Run tests
        run: go test

  build:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
        run: |
          output="build/autoeval-${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.version }}"
          if [ "${{ matrix.goos }}" == "windows" ]; then
          output+=".exe"
          fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o "$output" autoeval

      - name: Create release and upload binaries
        uses: softprops/action-gh-release@v1
        with:
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


